name: Build/release

on: push

jobs:
  release:
    permissions: write-all
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [windows-latest, macos-latest]

    steps:
      - name: Check out Git repository
        uses: actions/checkout@v4
      - name: Install Node.js and NPM
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: "npm"
      - name: Set up Python 3.9
        uses: actions/setup-python@v4
        with:
          python-version: "3.9"
          cache: "pip"
          cache-dependency-path: "**/requirements.txt"

      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install -r requirements.txt
          python -m pip install pyinstaller

      - name: Bundle Python scripts
        run: |
          pyinstaller --onefile --distpath ./resources/python ./scripts/clean_excel.py
          pyinstaller --onefile --distpath ./resources/python ./scripts/extract_brands.py

      - name: Install Node dependencies
        run: npm ci

      - name: Create .env file
        run: |
          echo "GH_TOKEN=${{ secrets.GITHUB_TOKEN }}" > .env
          echo "VITE_REACT_APP_ENV_VALUE=production" >> .env
        shell: bash

      - name: Verify .env file (Windows)
        if: runner.os == 'Windows'
        shell: cmd
        run: type .env

      - name: Verify .env file (Unix)
        if: runner.os != 'Windows'
        shell: bash
        run: cat .env

      - name: Build/release Electron app
        uses: samuelmeuli/action-electron-builder@v1
        with:
          # GitHub token, automatically provided to the action
          # (No need to define this secret in the repo settings)
          github_token: ${{ secrets.github_token }}

          # If the commit is tagged with a version (e.g. "v1.0.0"),
          # release the app after building
          release: ${{ startsWith(github.ref, 'refs/tags/v') }}
